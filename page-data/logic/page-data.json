{"componentChunkName":"component---src-templates-section-js","path":"/logic","result":{"data":{"mdx":{"slug":"logic/logic","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Logic\",\n  \"date\": \"2020-07-21\",\n  \"slug\": \"logic\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Box = makeShortcode(\"Box\");\nvar M = makeShortcode(\"M\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Logic\"), mdx(Box, {\n    type: \"Axiom\",\n    name: \"Axioms of Equality\",\n    mdxType: \"Box\"\n  }, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Axiom 1 (Reflexive).\"), \" For every \", mdx(M, {\n    math: \"x \\\\in \\\\mathbb{N}, x = x\",\n    mdxType: \"M\"\n  }), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Axiom 2 (Symmetry).\"), \" For every \", mdx(M, {\n    math: \"x, y \\\\in \\\\mathbb{N}\",\n    mdxType: \"M\"\n  }), \", if \", mdx(M, {\n    math: \"x = y\",\n    mdxType: \"M\"\n  }), \", then \", mdx(M, {\n    math: \"y = x\",\n    mdxType: \"M\"\n  }), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Axiom 3 (Transitive).\"), \" For every \", mdx(M, {\n    math: \"x, y, z \\\\in \\\\mathbb{N}\",\n    mdxType: \"M\"\n  }), \", if \", mdx(M, {\n    math: \"x = y\",\n    mdxType: \"M\"\n  }), \" and \", mdx(M, {\n    math: \"y = z\",\n    mdxType: \"M\"\n  }), \", then \", mdx(M, {\n    math: \"x = z\",\n    mdxType: \"M\"\n  }), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Axiom 4 (Closed).\"), \" For all \", mdx(M, {\n    mdxType: \"M\"\n  }, \"x\"), \" and \", mdx(M, {\n    mdxType: \"M\"\n  }, \"y\"), \", if \", mdx(M, {\n    math: \"x \\\\in \\\\mathbb{N}\",\n    mdxType: \"M\"\n  }), \" and \", mdx(M, {\n    math: \"x = y\",\n    mdxType: \"M\"\n  }), \", then \", mdx(M, {\n    math: \"y \\\\in \\\\mathbb{N}\",\n    mdxType: \"M\"\n  }), \".\")), mdx(Box, {\n    type: \"Axiom\",\n    name: \"Peano Axioms\",\n    mdxType: \"Box\"\n  }, mdx(\"p\", null, \"The Peano axioms serve to formally define the natural numbers, refered to as the set \", mdx(M, {\n    math: \"\\\\mathbb{N}\",\n    mdxType: \"M\"\n  }), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Axiom 1 (Zero).\"), \" \", mdx(M, {\n    math: \"0\",\n    mdxType: \"M\"\n  }), \" is a natural number. That is, \", mdx(M, {\n    math: \"0 \\\\in \\\\mathbb{N}\",\n    mdxType: \"M\"\n  }), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Axiom 2 (\", mdx(M, {\n    math: \"S\",\n    mdxType: \"M\"\n  }), \" is closed).\"), \" If \", mdx(M, {\n    math: \"x \\\\in \\\\mathbb{N}\",\n    mdxType: \"M\"\n  }), \", then \", mdx(M, {\n    math: \"S(x) \\\\in \\\\mathbb{N}\",\n    mdxType: \"M\"\n  }), \"\\xA0\", \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Axiom 3.\"), \" For every natural number \", mdx(M, {\n    math: \"x \\\\in \\\\mathbb{N}\",\n    mdxType: \"M\"\n  }), \", \", mdx(M, {\n    math: \"S(x) = 0\",\n    mdxType: \"M\"\n  }), \"\\xA0\", \" is false (i.e. \", mdx(M, {\n    math: \"0\",\n    mdxType: \"M\"\n  }), \" is not the successor of any natural number).\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Axiom 4 (Injective).\"), \" For all \", mdx(M, {\n    math: \"x, y \\\\in \\\\mathbb{N}\",\n    mdxType: \"M\"\n  }), \"\\xA0\", \", if \", mdx(M, {\n    math: \"S(x) = S(y)\",\n    mdxType: \"M\"\n  }), \"\\xA0\", \", then \", mdx(M, {\n    math: \"x = y\",\n    mdxType: \"M\"\n  }), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Axiom 5 (Axiom of Induction).\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Logic","slug":"logic"}}},"pageContext":{"slug":"logic/logic"}}}